
substitutions:
  id: kymera_wand_receiver
  name: Kymera Wand Receiver
  friendly_name: Kymera Wand Receiver

external_components:
  # https://github.com/Jorre05/remote_receiver
  - source: github://Jorre05/remote_receiver
    components: [ remote_receiver ]

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    - priority: 600
      then:
        - logger.log: "Boot - LED wait..."
        - light.turn_off:
            id: ${id}_led
        - delay: 500ms
        - logger.log: "Boot - LED red"
        - light.turn_on:
            id: ${id}_led
            brightness: 100%
            transition_length: 0.1s
            red: 100%
            green: 0%
            blue: 0%
    - priority: 240
      then:
        - logger.log: "Boot - LED yellow"
        - light.turn_on:
            id: ${id}_led
            brightness: 100%
            transition_length: 0.1s
            red: 100%
            green: 100%
            blue: 80%
        - wait_until:
            api.connected:
        - logger.log: "Boot - LED green"
        - light.turn_on:
            id: ${id}_led
            brightness: 100%
            transition_length: 0.1s
            red: 0%
            green: 100%
            blue: 0%
        - delay: 1s
        - logger.log: "Boot - LED off"
        - light.turn_off:
            id: ${id}_led

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino
    #type: esp-idf

# Enable logging
logger:
  # hardware_uart: USB_SERIAL_JTAG
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "TODO"

ota:
  password: "TODO"

wifi:
  use_address: ${name}.local
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} Fallback Hotspot"
    password: "TODO"

captive_portal:

# ESP32 Bluetooth Low Energy Tracker Hub (https://esphome.io/components/esp32_ble_tracker.html)
esp32_ble_tracker:
  scan_parameters:
    # We currently use the defaults to ensure Bluetooth
    # can co-exist with WiFi In the future we may be able to
    # enable the built-in coexistence logic in ESP-IDF
    # default:
    #   interval: 320ms
    #   window: 30ms
    # interval: 1100ms
    # window: 1100ms
    active: true

# Bluetooth Proxy (https://esphome.io/components/bluetooth_proxy.html)
bluetooth_proxy:
  active: true

text_sensor:
  - platform: template
    id: command
    name: Last command
    # on_value:
    #   then:
    #     - lambda: ESP_LOGI("main", "The current text is %s", x.c_str());

button:
- platform: safe_mode
  name: Safe Mode Boot
  entity_category: diagnostic

remote_receiver:
  id: ${id}_remote_receiver
  pin:
    number: GPIO3
    inverted: true
  rmt_channel: 2

binary_sensor:
  - platform: remote_receiver
    name: "Rotate anticlockwise" # "1"
    samsung:
        data: 0xE0E020DF
        nbits: 32
    filters:
      - delayed_off: 100ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Rotate anticlockwise" : "");
  - platform: remote_receiver
    name: "Rotate clockwise" # "2"
    samsung:
        data: 0xE0E0A05F
        nbits: 32
    filters:
      - delayed_off: 100ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Rotate clockwise" : "");
  - platform: remote_receiver
    name: "Flick upwards" # "3"
    samsung:
        data: 0xE0E0609F
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Flick upwards" : "");
  - platform: remote_receiver
    name: "Flick downwards" # "4"
    samsung:
        data: 0xE0E010EF
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Flick downwards" : "");
  - platform: remote_receiver
    name: "Flick left" # "5"
    samsung:
        data: 0xE0E0906F
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Flick left" : "");
  - platform: remote_receiver
    name: "Flick right" # "6"
    samsung:
        data: 0xE0E050AF
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Flick right" : "");
  - platform: remote_receiver
    name: "Tap on top" # "7"
    samsung:
        data: 0xE0E030CF
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Tap on top" : "");
  - platform: remote_receiver
    name: "Tap on side" # "8"
    samsung:
        data: 0xE0E0B04F
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Tap on side" : "");
  - platform: remote_receiver
    name: "Big swish" # "9"
    samsung:
        data: 0xE0E0708F
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Big swish" : "");
  - platform: remote_receiver
    name: "Push forward" # "0"
    samsung:
        data: 0xE0E08877
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Push forward" : "");
  - platform: remote_receiver
    name: "Double tap on top" # "-"
    samsung:
        data: 0xE0E0C43B
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Double tap on top" : "");
  - platform: remote_receiver
    name: "Double tap on side" # "Mute"
    samsung:
        data: 0xE0E0F00F
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Double tap on side" : "");
  - platform: remote_receiver
    name: "Pull back" # "Previous channel"
    samsung:
        data: 0xE0E0C837
        nbits: 32
    filters:
      - delayed_off: 400ms
    on_state:
      - lambda: |-
          id(command).publish_state(x ? "Pull back" : "");

light:
  - platform: esp32_rmt_led_strip
    id: ${id}_led
    rgb_order: GRB
    pin: GPIO2
    num_leds: 1
    rmt_channel: 0
    chipset: SK6812
    name: "LED"1
